<?xml version='1.0'?>
<!--
  Gazebo ROS differential drive plugin 

  Try sending commands:

    ros2 topic pub /demo/cmd_vel geometry_msgs/Twist '{linear: {x: 0.05}}' -1

    ros2 topic pub /demo/cmd_vel geometry_msgs/Twist '{angular: {z: 0.1}}' -1

  Try listening to odometry:

    ros2 topic echo /demo/odom

  Try listening to TF:

    ros2 run tf2_ros tf2_echo odom chassis

    ros2 run tf2_ros tf2_echo chassis right_wheel

    ros2 run tf2_ros tf2_echo chassis left_wheel
-->
<sdf version='1.4'>
  <model name="mobile_warehouse_robot">  
     <!-- If true, physics engine will ignore -->
     <static>false</static>    
     
       <!-- Add the rectangular base of the robot -->
       <link name='chassis'>
       
         <!--Position of the center will be: -->
         <!--x=0 meters, y=0 meters, z=0.1 meters-->
         <!--Orientation of the center will be: -->
         <!--Roll=0 rad, Pitch=0 rad, Yaw=0 rad -->
         <pose>0 0 .04 0 0 0</pose>

           <!-- Specify the shape for collisions -->
           <collision name='collision'>
             <geometry>
               <box>
                 <!-- Box is 0.6 meters in length -->
                 <!-- 0.2 meters in width -->
                 <!-- 0.4 meters in height -->
                 <size>.6 .2 .1</size>
               </box>
             </geometry>
           </collision>

           <!-- Specify the shape for visualization -->
           <visual name='visual'>
             <pose> 0 0 0.02 0 0 0 </pose>
             <material>
            <script>
                <uri>file://media/materials/scripts/gazebo.material</uri>
                <name>Gazebo/Blue</name>
            </script>
            </material>
             <geometry>
                 <!-- <uri>model://warehouse_robot/meshes/robot.dae</uri>
                 <scale>0.9 0.5 0.5 </scale> -->
                 <box>
                    <size>.6 .2 .1</size>
                </box>
             </geometry>
           </visual>
           <!-- <visual name='visual'>
                <origin xyz="0 0 0" rpy=" 0 0 0"/>
                <geometry>
                    <box size=".36 .1 .05"/>
                </geometry>
                <material>Gazebo/Blue</material>
            </visual> -->
           
           <!-- Add a caster wheel -->
           <!-- <collision name='caster_collision'>
             <pose>-0.19 0 0 0 0 0</pose>
             <geometry>
               <sphere>
                 <radius>.06</radius>
               </sphere>
             </geometry>

             <surface>
               <friction>
                 <ode>
                   <mu>0</mu>
                   <mu2>0</mu2>
                   <slip1>1.0</slip1>
                   <slip2>1.0</slip2>
                 </ode>
               </friction>
             </surface>
           </collision> -->

           <!-- <visual name='caster_visual'>
             <pose>-0.19 0 0 0 0 0</pose>
             <geometry>
               <sphere>
                 <radius>.06</radius>
               </sphere>
             </geometry>
           </visual>   -->        
                    
       </link>      

       <!-- Add the left wheel -->     
       <link name="left_wheel">
         <pose>0.12 0.19 0.1 0 1.5707 1.5707</pose>
         <collision name="collision">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </collision>
         <visual name="visual">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </visual>
       </link>  
 
       <!-- Add the right wheel -->      
       <link name="right_wheel">
         <pose>0.12 -0.19 0.1 0 1.5707 1.5707</pose>
         <collision name="collision">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </collision>
         <visual name="visual">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </visual>
       </link>

       <!-- Add the BACK left wheel -->      
       <link name="left_wheel_back">
         <pose>-0.22 0.19 0.1 0 1.5707 1.5707</pose>
         <collision name="collision">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </collision>
         <visual name="visual">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </visual>
       </link>

       <!-- Add the BACK right wheel -->      
       <link name="right_wheel_back">
         <pose>-0.22 -0.19 0.1 0 1.5707 1.5707</pose>
         <collision name="collision">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </collision>
         <visual name="visual">
           <geometry>
             <cylinder>
               <radius>.12</radius>
               <length>.08</length>
             </cylinder>
           </geometry>
         </visual>
       </link>

        <!-- Add the CAMERA -->
       <link name="camera">
            <inertial>
                <mass>0.1</mass>
            </inertial>
            <pose>0.15 0 0.2 0 0 0</pose>

           <collision name="cam_collision">
             <geometry>
               <box>
                 <size>0.05 0.05 0.05</size>
               </box>
             </geometry>
           </collision>

            <visual name="cam_visual">
                <geometry>
                    <box>
                        <size>0.05 0.05 0.05</size>
                    </box>
                </geometry>
                <material>
                    <script>
                        <uri>file://media/materials/scripts/gazebo.material</uri>
                        <name>Gazebo/Red</name>
                    </script>
                    </material>
            </visual>

            <sensor type="camera" name="camera1">
                <update_rate>30.0</update_rate>
                <camera name="head">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                    </image>
                    <clip>
                    <near>0.02</near>
                    <far>300</far>
                    </clip>
                    <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>1</updateRate>
                    <cameraName>rrbot/camera1</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>camera_link</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
                </sensor>
        </link>
      
       <!-- Add the laser range finder -->
       <link name="laser_link">
         <inertial>
           <!-- Mass of the laser range finder in kg -->
           <mass>0.1</mass>
         </inertial>
         <!-- Position is towards the front of the robot -->
         <!-- Laser finder is mounted on top -->
         <pose>0.15 0 0.30 0 0 0</pose>
         
         <!-- Add a mesh to make it more visually appealing -->
         <visual name="visual">
           <geometry>
             <mesh>
               <uri>model://hokuyo/meshes/hokuyo.dae</uri>
             </mesh>
           </geometry>
         </visual>
         
         <!-- Collision properties of the base of the laser range finder-->
         <collision name="collision-base">
           <pose>0 0 -0.0145 0 0 0</pose>
           <geometry>
             <box>
               <size>0.05 0.05 0.041</size>
             </box>
           </geometry>
         </collision>
         <!-- Collision properties of the top of the laser range finder-->
         <collision name="collision-top">
           <pose>0 0 0.0205 0 0 0</pose>
           <geometry>
             <cylinder>
               <radius>0.021</radius>
               <length>0.029</length>
             </cylinder>
           </geometry>
         </collision>
         
         <!-- Describes the type and properties of the sensor -->
            <sensor name="laser" type="ray">
            <pose>0.01 0 0.0175 0 -0 0</pose>
                <ray>
                    <scan>
                    <horizontal>
                        <samples>181</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.57080</min_angle>
                        <max_angle>1.57080</max_angle>
                    </horizontal>
                    </scan>
                    <range>
                    <min>0.08</min>
                    <max>10</max>
                    <resolution>0.05</resolution>
                    </range>
                </ray>
                <always_on>1</always_on>
                <update_rate>10</update_rate>
                <visualize>true</visualize>

                <plugin name='laser' filename='libgazebo_ros_ray_sensor.so'>
                    <ros>
                    <namespace>/demo</namespace>
                    <argument>--ros-args --remap ~/out:=scan</argument>
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type>
                </plugin>
            </sensor>
       </link>
      
       <!-- Add motor for the left wheel -->
       <joint type="revolute" name="left_wheel_hinge">
         <pose>0 0 -0.03 0 0 0</pose>
         <child>left_wheel</child>
         <parent>chassis</parent>
         <axis>
           <xyz>0 1 0</xyz>
         </axis>
       </joint>

       <!-- Add motor for the right wheel -->
       <joint type="revolute" name="right_wheel_hinge">
         <pose>0 0 0.03 0 0 0</pose>
         <child>right_wheel</child>
         <parent>chassis</parent>
         <axis>
           <xyz>0 1 0</xyz>
         </axis>
       </joint>

       <!-- Add motor for the back left wheel -->
       <joint type="fixed" name="left_back_wheel_hinge">
         <pose>0 0 0 0 0 0</pose>
         <child>left_wheel_back</child>
         <parent>chassis</parent>
         <axis>
           <xyz>0 1 0</xyz>
         </axis>
       </joint>

       <!-- Add motor for the back right wheel -->
       <joint type="fixed" name="right_back_wheel_hinge">
         <pose>0 0 0 0 0 0</pose>
         <child>right_wheel_back</child>
         <parent>chassis</parent>
         <axis>
           <xyz>0 1 0</xyz>
         </axis>
       </joint>
      
       <!-- Connect laser range finder to the robot's body -->
       <joint type="fixed" name="laser_joint">
         <child>laser_link</child>
         <parent>chassis</parent>
       </joint>

       <!-- Connect camera to the robot's body -->
       <joint type="fixed" name="camera_joint">
         <child>camera</child>
         <parent>chassis</parent>
       </joint>
      
       <!-- Controls the differential drive robot -->
       <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
         <ros>
           <namespace>/demo</namespace>
           <remapping>cmd_vel:=cmd_vel</remapping>
           <remapping>odom:=odom</remapping>
         </ros>

         <!-- wheels -->
         <left_joint>left_wheel_hinge</left_joint>
         <right_joint>right_wheel_hinge</right_joint>

         <!-- kinematics -->
         <wheel_separation>0.26</wheel_separation>
         <wheel_diameter>0.2</wheel_diameter>

         <!-- limits -->
         <max_wheel_torque>20</max_wheel_torque>
         <max_wheel_acceleration>1.0</max_wheel_acceleration>

         <!-- output -->
         <publish_odom>true</publish_odom>
         <publish_odom_tf>true</publish_odom_tf>
         <publish_wheel_tf>true</publish_wheel_tf>

         <odometry_frame>odom</odometry_frame>
         <robot_base_frame>chassis</robot_base_frame>
       </plugin>    
  </model>
</sdf>
